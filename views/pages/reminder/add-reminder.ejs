<!DOCTYPE html>
<html lang="en">

<head>
    <title>Add Reminder - MediTrack</title>
    <%- include('../../partials/_header') %>
    <%- include('../../partials/_styles') %>
    <%- include('../../partials/_loader') %>
    <style>
        /* Container for the form */
        .form-container {
            background: rgba(255, 255, 255, 0.9);
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            max-width: 500px;
            width: 100%;
            margin: 0 auto;
        }

        /* h1 inside .form-container */
        .form-container h1 {
            font-size: 2rem;
            margin-bottom: 25px;
            text-align: center;
            color: #333;
        }

        /* Form group inside .form-container */
        .form-container .form-group {
            margin-bottom: 20px;
            display: flex;
            flex-direction: column;
            gap: 8px;
            align-items: center;
            /* Center all form groups */
        }

        /* Labels inside .form-container */
        .form-container label {
            font-weight: bold;
            color: #444;
        }

        /* Inputs and textarea inside .form-container */
        .form-container input,
        .form-container textarea {
            padding: 10px;
            border-radius: 5px;
            border: 1px solid #ccc;
            font-size: 1em;
            width: 100%;
            /* Ensure inputs stretch to fit */
            max-width: 300px;
            /* Limit width for consistency */
        }

        .form-container textarea {
            resize: vertical;
            min-height: 100px;
        }

        /* Button inside .form-container */
        .form-container button[type="submit"] {
            background: #3498db;
            color: white;
            padding: 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            width: 100%;
            max-width: 300px;
            /* Match input width */
            font-size: 1.2em;
            transition: background 0.3s ease;
            margin: 0 auto;
            /* Center the submit button */
            display: block;
            /* Ensure it behaves as a block element */
        }

        /* Button hover state inside .form-container */
        .form-container button[type="submit"]:hover {
            background: #2980b9;
        }

        /* Error message */
        .error-message {
            color: #e74c3c;
            text-align: center;
            margin-bottom: 20px;
        }
    </style>
</head>

<body>
    <%- include('../../partials/_sidebar') %> <!-- Include sidebar partial -->
    <!-- Include Auth partial -->

    <!-- Main Content -->
    <div class="main-content" id="main-content">
        <div class="form-container">
            <h1>Add Reminder</h1>
            <% if (typeof error !== 'undefined' && error) { %>
            <p class="error-message"><%= error %></p>
            <% } %>
            <form action="/add-reminder" method="POST" id="add-reminder-form">
                <div class="form-group">
                    <label for="title">Reminder Title</label>
                    <input type="text" name="title" id="title" required />
                </div>
                <div class="form-group">
                    <label for="description">Description</label>
                    <textarea name="description" id="description"></textarea>
                </div>
                <div class="form-group">
                    <label for="datetime">Date & Time</label>
                    <input type="datetime-local" name="datetime" id="datetime" required />
                </div>
                <button type="submit">Add Reminder</button>
            </form>
        </div>
    </div>

    <script>
        // Fallback showAlert function
        function showAlert(message, type) {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type === 'success' ? 'success' : 'danger'} alert-dismissible fade show`;
            alertDiv.style.margin = '10px auto';
            alertDiv.style.maxWidth = '500px';
            alertDiv.role = 'alert';
            alertDiv.innerHTML = `
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    `;
            document.querySelector('.form-container').prepend(alertDiv);
            setTimeout(() => {
                alertDiv.classList.remove('show');
                setTimeout(() => alertDiv.remove(), 300); // Match Bootstrap fade duration
            }, 5000); // Auto-dismiss after 5 seconds
        }

        // Restrict datetime to current and future dates
        const datetimeInput = document.getElementById('datetime');
        const now = new Date().toISOString().slice(0, 16); // YYYY-MM-DDTHH:MM format
        datetimeInput.setAttribute('min', now); // Set minimum to current date/time

        // Form submission handling
        document.getElementById('add-reminder-form').addEventListener('submit', async (e) => {
            e.preventDefault(); // Prevent default form submission

            const title = document.getElementById('title').value.trim();
            const description = document.getElementById('description').value.trim();
            const datetime = document.getElementById('datetime').value;

            // Client-side validation
            if (!title || !datetime) {
                showAlert('Title and Date & Time are required.', 'danger');
                return;
            }

            // Debug form data
            console.log('Form data:', { title, description, datetime });

            try {
                showLoader(); // Show loader after validation
                const response = await fetch('/add-reminder', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    },
                    body: JSON.stringify({
                        title,
                        description,
                        datetime,
                    }),
                    credentials: 'include' // Include cookies for auth
                });

                hideLoader(); // Hide loader after response

                if (response.ok) {
                    showAlert('Reminder added successfully!', 'success');
                    document.getElementById('add-reminder-form').reset(); // Clear form
                    // Redirect to reminders list after a delay
                    setTimeout(() => {
                        window.location.href = '/all-reminders';
                    }, 1000);
                } else {
                    let errorMessage = 'Failed to add reminder. Please try again.';
                    try {
                        const errorData = await response.json();
                        errorMessage = errorData.message || errorMessage;
                    } catch (jsonError) {
                        console.error('Error parsing JSON response:', jsonError);
                    }
                    showAlert(errorMessage, 'danger');
                }
            } catch (error) {
                console.error('Error adding reminder:', error);
                hideLoader();
                showAlert('An error occurred. Please try again.', 'danger');
            }
        });
    </script>

    <%- include('../../partials/_scripts') %>
    <%- include('../../partials/_footer') %>