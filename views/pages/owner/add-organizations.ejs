<!DOCTYPE html>
<html lang="en">

<head>
    <title>All Organizations - MediTrack</title>
    <%- include('../../partials/_header') %>
    <%- include('../../partials/_styles') %>
</head>

<body>
    <%- include('../../partials/_sidebar') %>
    <%- include('../../partials/_auth') %>

    <div class="main-content">
    </div>

    <%- include('../../partials/_scripts') %>
</body>

</html>
<div class="form-container">
    <div class="header-container">
        <h1>All Organizations</h1>
        <button class="add-organization-btn" onclick="window.location.href='/add-organization'">
            Add Organization
        </button>
    </div>
</div>
<% if (typeof error !== 'undefined' && error) { %>
    <p class="error-message"><%= error %></p>
    <% } %>
    
    <table class="organizations-table" id="organizationsTable">
        <thead>
            <tr>
                <th onclick="sortTable(0)">Name</th>
                <th onclick="sortTable(1)">Description</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody id="organizationsBody">
        </tbody>
    </table>
    

    <% if (organizations && organizations.length > 0) { %>
        <% organizations.forEach(org => { %>
            <tr data-id="<%= org.organizationId %>">
                <td>
                    <input type="text" id="name-<%= org.organizationId %>" value="<%= org.name %>" disabled required />
                </td>
                <td>
                    <textarea id="description-<%= org.organizationId %>" disabled><%= org.description %></textarea>
                </td>
                <td>
                    <button class="edit-btn" data-id="<%= org.organizationId %>">Edit</button>
                    <button class="save-btn" data-id="<%= org.organizationId %>">Save</button>
                    <button class="delete-btn" data-id="<%= org.organizationId %>">Delete</button>
                </td>
            </tr>
        <% }) %>
    <% } else { %>
        <tr>
            <td colspan="4" style="text-align: center;">No organizations found.</td>
        </tr>
    <% } %>

    <script>
        let organizationsData = <% - JSON.stringify(organizations || []) %>;
        let sortColumn = -1;
        let sortDirection = 1;
    
        function sortTable(columnIndex) {
            if (sortColumn === columnIndex) {
                sortDirection *= -1;
            } else {
                sortDirection = 1;
            }
            sortColumn = columnIndex;
    
            organizationsData.sort((a, b) => {
                let aValue = a.name || '';
                let bValue = b.name || '';
    
                if (columnIndex === 1) { // Description column
                    aValue = a.description || '';
                    bValue = b.description || '';
                }
    
                return (aValue < bValue ? -1 : 1) * sortDirection;
            });
    
            renderTable();
            updateSortIndicators(columnIndex);
        }
    
        function updateSortIndicators(columnIndex) {
            const headers = document.querySelectorAll('#organizationsTable th');
            headers.forEach((th, index) => {
                th.classList.remove('sort-asc', 'sort-desc');
                if (index === columnIndex) {
                    th.classList.add(sortDirection === 1 ? 'sort-asc' : 'sort-desc');
                }
            });
        }
    </script>
    
    
    <script>
        function renderTable() {
            const tbody = document.getElementById('organizationsBody');
            tbody.innerHTML = '';
    
            if (organizationsData.length === 0) {
                tbody.innerHTML = '<tr><td colspan="4" style="text-align: center;">No organizations found.</td></tr>';
                return;
            }
    
            organizationsData.forEach(org => {
                const row = document.createElement('tr');
                row.dataset.id = org.organizationId;
                row.innerHTML = `
                    <td><input type="text" id="name-${org.organizationId}" value="${org.name}" disabled required /></td>
                    <td><textarea id="description-${org.organizationId}" disabled>${org.description}</textarea></td>
                    <td>
                        <button class="edit-btn" data-id="${org.organizationId}">Edit</button>
                        <button class="save-btn" data-id="${org.organizationId}">Save</button>
                        <button class="delete-btn" data-id="${org.organizationId}">Delete</button>
                    </td>
                `;
                tbody.appendChild(row);
            });
    
            attachEventListeners();
        }
    </script>
    
    <script>
        function attachEventListeners() {
            document.querySelectorAll('.edit-btn').forEach(btn => {
                btn.addEventListener('click', (e) => {
                    const id = e.target.dataset.id;
                    const row = e.target.closest('tr');
                    const inputs = row.querySelectorAll('input, textarea');
                    const saveBtn = row.querySelector('.save-btn');
                    inputs.forEach(input => input.disabled = false);
                    e.target.style.display = 'none';
                    saveBtn.style.display = 'inline-block';
                });
            });
        }
    </script>
    
    <script>
        document.querySelectorAll('.save-btn').forEach(btn => {
            btn.addEventListener('click', async (e) => {
                const id = e.target.dataset.id;
                const row = e.target.closest('tr');
                const name = row.querySelector(`#name-${id}`).value.trim();
                const description = row.querySelector(`#description-${id}`).value.trim();
    
                if (!name) {
                    alert('Name is required.');
                    return;
                }
    
                try {
                    const response = await fetch(`/organization/${id}`, {
                        method: 'PUT',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ name, description })
                    });
    
                    if (response.ok) {
                        row.querySelectorAll('input, textarea').forEach(input => input.disabled = true);
                        row.querySelector('.edit-btn').style.display = 'inline-block';
                        e.target.style.display = 'none';
                        alert('Organization updated successfully!');
                    } else {
                        alert('Failed to update organization.');
                    }
                } catch (error) {
                    alert('An error occurred. Please try again.');
                }
            });
        });
    </script>
    